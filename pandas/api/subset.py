import timeit

import numpy as np
import pandas as pd

pd.set_option('display.float_format', lambda x: '%.2f' % x)
df = pd.read_csv('../../my_data/naver_finance/2015_12.csv')

# output => Series
s1 = df['EPS(원)']
print(s1)
# 0     -3245.74
# 1      3071.87
# 2      1853.18
# 3     15693.81
# 4      5780.63
#         ...
# 676     607.14
# 677     100.19
# 678     896.12
# 679     301.59
# 680     227.19
# Name: EPS(원), Length: 681, dtype: float64

# output = DataFrame
df2 = df[['EPS(원)', 'ticker']]
print(df2)
#       EPS(원)   ticker
# 0   -3245.74    AK홀딩스
# 1    3071.87      BGF
# 2    1853.18  BNK금융지주
# 3   15693.81      BYC
# 4    5780.63       CJ
# ..       ...      ...
# 676   607.14      휴비스
# 677   100.19      휴스틸
# 678   896.12      휴켐스
# 679   301.59     흥국화재
# 680   227.19     흥아해운
#
# [681 rows x 2 columns]

df3 = df.filter(like='RO')
print(df3)
#      ROE(%)  ROA(%)  ROIC(%)
# 0     -7.68   -1.42    15.12
# 1     22.77   10.33   271.96
# 2      9.12    0.61      NaN
# 3      3.55    2.02    13.24
# 4      5.87    2.37     5.82
# ..      ...     ...      ...
# 676    5.44    2.40     4.18
# 677    0.17    0.13     0.93
# 678    7.76    4.71     9.52
# 679    3.79    0.20      NaN
# 680    6.18    1.46     4.98
#
# [681 rows x 3 columns]

df4 = df.filter(regex="P\w+R")
print(df4)
#      PER(배)  PBR(배)  PSR(배)
# 0    -19.47    1.45    0.30
# 1     28.78    5.66    1.01
# 2      4.54    0.39    0.43
# 3     29.28    1.01    2.12
# 4     40.94    2.15    0.40
# ..      ...     ...     ...
# 676   12.80    0.65    0.22
# 677  153.70    0.27    0.24
# 678   17.07    1.25    1.04
# 679   13.93    0.62    0.06
# 680   14.76    0.89    0.18
#
# [681 rows x 3 columns]

##############################################################################
df_value_counts = df.dtypes.value_counts()
print(df_value_counts)
# float64    15
# object      1
# Name: count, dtype: int64

df5 = df.select_dtypes(include=[float])
print(df5)
#       매출액(억원)  영업이익률(%)  순이익률(%)  당기순이익(억원)  ...  PBR(배)  PSR(배)     price    price2
# 0    28071.48      3.79    -1.33    -374.43  ...    1.45    0.30  63200.00  56000.00
# 1    43342.80      4.24     3.53    1528.41  ...    5.66    1.01  44202.00  42140.00
# 2    51740.25     13.46    10.25    5304.71  ...    0.39    0.43   8420.00   8680.00
# 3     1821.96     11.60     7.22     131.58  ...    1.01    2.12 459500.00 397000.00
# 4   211667.08      5.79     2.60    5511.16  ...    2.15    0.40 236684.00 176334.00
# ..        ...       ...      ...        ...  ...     ...     ...       ...       ...
# 676  12050.85      2.79     1.75     211.20  ...    0.65    0.22   7770.00   8210.00
# 677   4384.75      1.88     0.16       6.93  ...    0.27    0.24  15400.00  15400.00
# 678   6004.26      7.26     5.70     342.23  ...    1.25    1.04  15300.00  21700.00
# 679  42355.85      0.42     0.46     196.53  ...    0.62    0.06   4200.00   3705.00
# 680   8451.15      2.51     1.24     105.17  ...    0.89    0.18   3315.00   2426.00
#
# [681 rows x 15 columns]

df6 = df.select_dtypes(include=[object])
print(df6)
#       ticker
# 0      AK홀딩스
# 1        BGF
# 2    BNK금융지주
# 3        BYC
# 4         CJ
# ..       ...
# 676      휴비스
# 677      휴스틸
# 678      휴켐스
# 679     흥국화재
# 680     흥아해운
#
# [681 rows x 1 columns]

##################################################################################
name_df = df.set_index('ticker')
print(name_df.head())
#           매출액(억원)  영업이익률(%)  순이익률(%)  ...  PSR(배)     price    price2
# ticker                                ...
# AK홀딩스    28071.48      3.79    -1.33  ...    0.30  63200.00  56000.00
# BGF      43342.80      4.24     3.53  ...    1.01  44202.00  42140.00
# BNK금융지주  51740.25     13.46    10.25  ...    0.43   8420.00   8680.00
# BYC       1821.96     11.60     7.22  ...    2.12 459500.00 397000.00
# CJ      211667.08      5.79     2.60  ...    0.40 236684.00 176334.00
#
# [5 rows x 15 columns]

# row를 기준으로 subset을 추출한다.
## iloc <- index 순서 기준 추출
print(name_df.iloc[0])
# 매출액(억원)      28071.48
# 영업이익률(%)         3.79
# 순이익률(%)         -1.33
# 당기순이익(억원)     -374.43
# ROE(%)          -7.68
# ROA(%)          -1.42
# ROIC(%)         15.12
# EPS(원)       -3245.74
# BPS(원)       43497.72
# SPS(원)      211899.22
# PER(배)         -19.47
# PBR(배)           1.45
# PSR(배)           0.30
# price        63200.00
# price2       56000.00
# Name: AK홀딩스, dtype: float64

print(name_df.iloc[[0, 1]])
#         매출액(억원)  영업이익률(%)  순이익률(%)  당기순이익(억원)  ...  PBR(배)  PSR(배)    price   price2
# ticker                                         ...
# AK홀딩스  28071.48      3.79    -1.33    -374.43  ...    1.45    0.30 63200.00 56000.00
# BGF    43342.80      4.24     3.53    1528.41  ...    5.66    1.01 44202.00 42140.00

## loc <- index 명 기준 추출
print(name_df.loc[['삼성전자', 'CJ']])
#           매출액(억원)  영업이익률(%)  순이익률(%)  ...  PSR(배)     price    price2
# ticker                                ...
# 삼성전자   2006534.90     13.16     9.50  ...    1.07  25200.00  36040.00
# CJ      211667.08      5.79     2.60  ...    0.40 236684.00 176334.00
#
# [2 rows x 15 columns]

print(name_df.loc['삼성전자', '순이익률(%)'])
# 9.499
print(name_df.loc[['삼성전자', 'CJ'], '순이익률(%)'])
# ticker
# 삼성전자   9.50
# CJ     2.60
# Name: 순이익률(%), dtype: float64
print(name_df.loc[['삼성전자', 'CJ'], ['순이익률(%)', 'EPS(원)']])
#         순이익률(%)  EPS(원)
# ticker
# 삼성전자       9.50 2197.65
# CJ         2.60 5780.63
######################################################################################
name_df = name_df.sort_index()
print(name_df.index.is_monotonic_increasing)  # True
print(name_df.loc['삼성':'삼성전자'])
#            매출액(억원)  영업이익률(%)  순이익률(%)  ...  PSR(배)     price    price2
# ticker                                 ...
# 삼성SDI     49548.61     -5.40     0.52  ...    1.62 114000.00 109000.00
# 삼성공조        923.96      3.38     9.09  ...    0.92  10450.00  11350.00
# 삼성물산     133446.75      0.28    20.12  ...    1.61 140000.00 125500.00
# 삼성생명     277059.28      4.14     4.37  ...    0.79 110000.00 112500.00
# 삼성에스디에스   78534.59      7.49     5.98  ...    2.50 254000.00 139500.00
# 삼성엔지니어링   64412.51    -22.58   -20.25  ...    0.14  14550.00  10300.00
# 삼성전기      61762.58      4.88     0.33  ...    0.79  62900.00  50800.00
# 삼성전자    2006534.90     13.16     9.50  ...    1.07  25200.00  36040.00
#
# [8 rows x 15 columns]


##################################################################
df = pd.read_csv('../../my_data/naver_finance/2015_12.csv')
# scalar를 찾을 때 loc, iloc 보다 at, iat이 속도 측면에서 더 우수하다.
print(timeit.timeit(lambda: df.loc[100, '순이익률(%)'], number=10000))
# 0.040023199981078506
print(timeit.timeit(lambda: df.at[100, '순이익률(%)'], number=10000))
# 0.018484000000171363

###############################################################
# Boolean selection
tmp_series = pd.Series({'a':1, 'b':2})
print(tmp_series > 2)
# a    False
# b    False
# dtype: bool

tmp_df = pd.DataFrame({'a': [1, np.nan, 3, 4, np.nan], 'b': [5, 3, 3, 4, np.nan]})
print(tmp_df)
#      a    b
# 0 1.00 5.00
# 1  NaN 3.00
# 2 3.00 3.00
# 3 4.00 4.00
# 4  NaN  NaN
tmp_df2 = tmp_df > 2
print(tmp_df2)
#        a      b
# 0  False   True
# 1  False   True
# 2   True   True
# 3   True   True
# 4  False  False

a = df['순이익률(%)'] > df['영업이익률(%)']
print(a)
# 0      False
# 1      False
# 2      False
# 3      False
# 4      False
#        ...
# 676    False
# 677    False
# 678    False
# 679     True
# 680    False
# Length: 681, dtype: bool
print(a.sum())
# 142

# boolean series의 값이 True인 인덱스의 row만 가져온다.
print(df[a])
#       ticker   매출액(억원)  영업이익률(%)  순이익률(%)  ...  PBR(배)  PSR(배)     price    price2
# 9      CS홀딩스   1389.71     16.33    21.30  ...    0.44    0.66  79300.00  80700.00
# 10        DB   2036.71      4.79     6.47  ...    0.51    0.44    495.00    734.00
# 13     DB하이텍   6665.95     18.75    19.01  ...    2.44    0.95  14300.00  15900.00
# 33     KC코트렐   1867.74     -4.67    -3.61  ...    1.28    0.38   6571.00   5960.00
# 41   KTB투자증권   2393.69      4.17    13.14  ...    0.37    0.67   2265.00   2925.00
# ..       ...       ...       ...      ...  ...     ...     ...       ...       ...
# 654    현대자동차 919587.40      6.91     7.08  ...    0.65    0.46 149000.00 146000.00
# 656   현대종합상사  42619.00      0.55     3.46  ...    0.77    0.13  28600.00  21900.00
# 659    현대홈쇼핑   8959.79     11.67    12.40  ...    1.01    1.55 115500.00 111500.00
# 668     화천기공   1993.25      5.56     8.03  ...    0.46    0.61  55000.00  50400.00
# 679     흥국화재  42355.85      0.42     0.46  ...    0.62    0.06   4200.00   3705.00
#
# [142 rows x 16 columns]

# df.loc[a] -> df.loc[[9, 10, 13, ...]]
print(df.loc[a])
#       ticker   매출액(억원)  영업이익률(%)  순이익률(%)  ...  PBR(배)  PSR(배)     price    price2
# 9      CS홀딩스   1389.71     16.33    21.30  ...    0.44    0.66  79300.00  80700.00
# 10        DB   2036.71      4.79     6.47  ...    0.51    0.44    495.00    734.00
# 13     DB하이텍   6665.95     18.75    19.01  ...    2.44    0.95  14300.00  15900.00
# 33     KC코트렐   1867.74     -4.67    -3.61  ...    1.28    0.38   6571.00   5960.00
# 41   KTB투자증권   2393.69      4.17    13.14  ...    0.37    0.67   2265.00   2925.00
# ..       ...       ...       ...      ...  ...     ...     ...       ...       ...
# 654    현대자동차 919587.40      6.91     7.08  ...    0.65    0.46 149000.00 146000.00
# 656   현대종합상사  42619.00      0.55     3.46  ...    0.77    0.13  28600.00  21900.00
# 659    현대홈쇼핑   8959.79     11.67    12.40  ...    1.01    1.55 115500.00 111500.00
# 668     화천기공   1993.25      5.56     8.03  ...    0.46    0.61  55000.00  50400.00
# 679     흥국화재  42355.85      0.42     0.46  ...    0.62    0.06   4200.00   3705.00
#
# [142 rows x 16 columns]

con1 = df['순이익률(%)'] > df['영업이익률(%)']
con2 = df['PBR(배)'] < 1
final_con = con1 & con2
print(final_con)
# 0      False
# 1      False
# 2      False
# 3      False
# 4      False
#        ...
# 676    False
# 677    False
# 678    False
# 679     True
# 680    False
# Length: 681, dtype: bool
print(df.loc[final_con].head())
#        ticker  매출액(억원)  영업이익률(%)  순이익률(%)  ...  PBR(배)  PSR(배)    price   price2
# 9       CS홀딩스  1389.71     16.33    21.30  ...    0.44    0.66 79300.00 80700.00
# 10         DB  2036.71      4.79     6.47  ...    0.51    0.44   495.00   734.00
# 41    KTB투자증권  2393.69      4.17    13.14  ...    0.37    0.67  2265.00  2925.00
# 63        OCI 23015.21     -6.28     7.91  ...    0.61    0.78 75000.00 78700.00
# 69  SBS미디어홀딩스  4735.23      4.91     5.33  ...    0.80    1.15  3890.00  2675.00
#
# [5 rows x 16 columns]
print(df.loc[final_con, ['ROE(%)']].head())
#     ROE(%)
# 9    10.91
# 10    9.55
# 41    7.87
# 63    3.49
# 69    3.36

# all(), any()
a = df['순이익률(%)'] > 0
# boolean series의 모든 값이 True인지 확인
print(a.all())
# False

# boolean series의 값 중 True가 있는 지 확인
print(a.any())
# True